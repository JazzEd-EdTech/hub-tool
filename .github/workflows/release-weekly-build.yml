name: Release and Weekly Build
on:
  schedule:
    - cron: "0 0 * * SUN"
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch'
        required: true
        default: 'main'
      tag:
        description: 'Release Tag'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    env:
      GO111MODULE: "on"
    steps:
      - name: Set up Go 1.15
        uses: actions/setup-go@v1
        with:
          go-version: 1.15
        id: go

      - name: Checkout code into the Go module directory
        uses: actions/checkout@v2

      - name: Check license headers
        run: make validate

      - name: Run golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b . v1.27.0
          ./golangci-lint run

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    defaults:
      run:
        shell: bash
    env:
      GO111MODULE: "on"
      GITHUB_WORKFLOW_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

    steps:
      - name: Install Docker CLI
        if: ${{ matrix.os == 'macos-latest' }}
        # Only the CLI is needed to run docker-hub e2e
        run: brew install docker

      - name: Set up Go 1.15
        uses: actions/setup-go@v2
        with:
          go-version: 1.15
        id: go

      - name: Checkout code into the Go module directory
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Download binaries
        run: make -f builder.Makefile download

      - name: Build binary and run tests
        env:
          E2E_HUB_USERNAME: ${{ secrets.E2E_HUB_USERNAME }}
          E2E_HUB_TOKEN_TOKEN: ${{ secrets.E2E_HUB_TOKEN_TOKEN }}
        run: make TAG_NAME=${{ github.event.inputs.tag }} -f builder.Makefile build test-unit e2e

      - name: Upload binary artifact
        if: ${{ github.event.inputs.tag != '' }} # don't push artifacts if no tag is specified
        uses: actions/upload-artifact@v2
        with:
          name: docker-hub-${{ matrix.os}}
          path: ./bin/

  release:
    runs-on: ubuntu-latest
    needs: [lint, build]
    if: ${{ github.event.inputs.tag != '' }} # don't release if no tag is specified
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          path: dist

      - name: Ship it
        uses: ncipollo/release-action@v1
        with:
          artifacts: "dist/*/*"
          prerelease: true
          draft: true
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.event.inputs.tag }}
